[{"/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/index.tsx":"1","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/reportWebVitals.ts":"2","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/App.tsx":"3","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/router.tsx":"4","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/index.ts":"5","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/reducers.ts":"6","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/sagas/index.ts":"7","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/slices/profile.ts":"8","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/pages/Home.tsx":"9","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/slices/auth.ts":"10","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/sagas/auth.ts":"11","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/api/auth.ts":"12","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/config.ts":"13","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/pages/Login.tsx":"14","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/notification.tsx":"15","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/slices/notification.ts":"16","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/sagas/notification.ts":"17","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/pages/login.tsx":"18","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/pages/signup.tsx":"19","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/pages/home.tsx":"20","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/pages/signupConfirm.tsx":"21","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/components/ActivityButton.tsx":"22","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/slices/ui.ts":"23","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/header.tsx":"24"},{"size":598,"mtime":1607690299681,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1607686790036,"results":"27","hashOfConfig":"26"},{"size":407,"mtime":1607708828308,"results":"28","hashOfConfig":"26"},{"size":1972,"mtime":1607935668255,"results":"29","hashOfConfig":"26"},{"size":845,"mtime":1607688003690,"results":"30","hashOfConfig":"26"},{"size":427,"mtime":1607935532936,"results":"31","hashOfConfig":"26"},{"size":327,"mtime":1607713874456,"results":"32","hashOfConfig":"26"},{"size":494,"mtime":1607688000350,"results":"33","hashOfConfig":"26"},{"size":631,"mtime":1607690522094,"results":"34","hashOfConfig":"26"},{"size":1026,"mtime":1607935626843,"results":"35","hashOfConfig":"26"},{"size":1764,"mtime":1607935584312,"results":"36","hashOfConfig":"26"},{"size":1141,"mtime":1607935607993,"results":"37","hashOfConfig":"26"},{"size":405,"mtime":1607935498695,"results":"38","hashOfConfig":"26"},{"size":2821,"mtime":1607713967407,"results":"39","hashOfConfig":"26"},{"size":737,"mtime":1607714241010,"results":"40","hashOfConfig":"26"},{"size":711,"mtime":1607714163919,"results":"41","hashOfConfig":"26"},{"size":445,"mtime":1607939519611,"results":"42","hashOfConfig":"26"},{"size":3069,"mtime":1607935211421,"results":"43","hashOfConfig":"26"},{"size":5883,"mtime":1607935091429,"results":"44","hashOfConfig":"26"},{"size":631,"mtime":1607935096934,"results":"45","hashOfConfig":"26"},{"size":594,"mtime":1607935091472,"results":"46","hashOfConfig":"26"},{"size":602,"mtime":1607935030895,"results":"47","hashOfConfig":"26"},{"size":1077,"mtime":1607935054318,"results":"48","hashOfConfig":"26"},{"size":1910,"mtime":1607935687927,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"qrz4zj",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"52"},"/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/index.tsx",[],["112","113"],"/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/reportWebVitals.ts",[],"/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/App.tsx",[],"/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/router.tsx",["114"],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport { Header } from \"./header\";\nimport { Container } from \"reactstrap\";\n\nimport { Home } from './pages/home'\nimport { LoginPage } from './pages/login'\nimport { SignupPage } from './pages/signup'\nimport { SignupConfirmPage } from './pages/signupConfirm'\n\nimport * as AuthApi from './api/auth'\n\nconst PrivateRoute = ({ children: Component, ...rest }: any) => {\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false)\n  React.useEffect(() => {\n    AuthApi.isAuthenticated().then((result) => {\n      if (result) {\n        setIsLoggedIn(true)\n      } else {\n        setIsLoggedIn(false)\n      }\n    })\n      .catch((error) => {\n        setIsLoggedIn(false)\n      })\n    return () => { }\n  }, [])\n\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return (\n          isLoggedIn ? (\n            <Component {...props} />\n          ) : (\n              <Redirect to=\"/login\" />\n            )\n        )\n      }\n      }\n    />\n  )\n}\n\nexport const AppRouter = () => {\n  return (\n    <Router>\n      <Header className=\"mb-3\" />\n      <Container fluid>\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/signup/confirm/:code\">\n            <SignupConfirmPage />\n          </Route>          \n          <Route path=\"/signup/confirm/\">\n            <SignupConfirmPage />\n          </Route>          \n          <Route path=\"/signup\">\n            <SignupPage />\n          </Route>          \n          <Route path=\"/users\">\n            <Users />\n          </Route>\n          <PrivateRoute path=\"/\">\n            <Home />\n          </PrivateRoute>\n        </Switch>\n      </Container>\n    </Router>\n  );\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/index.ts",[],"/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/reducers.ts",[],"/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/sagas/index.ts",["115","116","117","118"],"import { call, put, takeEvery, takeLatest, all } from 'redux-saga/effects'\nimport { sagas as authSagas } from './auth'\nimport { sagas as notificationSagas } from './notification'\n\n\nfunction* runAllSagas() {\n  console.log('in root saga')\n  yield all([\n    authSagas(),\n    notificationSagas()\n  ])\n}\n\nexport default runAllSagas;","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/slices/profile.ts",["119"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface Profile {\n  publicKey: string\n}\n\nexport const currentSlice = createSlice({\n  name: 'profile',\n  initialState: {\n    publicKey: \"\"\n  },\n  reducers: {\n    addPublicKey: (state, action: PayloadAction<any>) =>  state.publicKey = action.payload\n  }\n})\n\nexport const { actions, reducer }: any = currentSlice\nexport const { addPublicKey } = actions\nexport const selectors = {\n  getPublicKey: (state: any) => state.publicKey,\n}\n","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/pages/Home.tsx",[],["120","121"],"/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/slices/auth.ts",["122"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { transpileModule } from \"typescript\";\n\nexport const currentSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    logged: false,\n    error: undefined\n  },\n  reducers: {\n    willLoginUser: (state, action: PayloadAction<any>) =>  state,\n    didLoginUserSuccess: (state, action: PayloadAction<any>) =>  state.logged = true as any,\n    didLoginUserFails: (state, action: PayloadAction<any>) =>  void(state.error = action.payload),\n\n    willSignupUser: (state, action: PayloadAction<any>) =>  state,\n    didSignupUserSuccess: (state, action: PayloadAction<any>) =>  state,\n    didSignupUserFails: (state, action: PayloadAction<any>) =>  void(state.error = action.payload)\n  }\n})\n\nexport const { actions, reducer }: any = currentSlice\nexport const { addPublicKey } = actions\nexport const selectors = {\n  isLogged: (state: any) => state.auth.logged,\n  isAuthenticated: (state: any) => state.auth.logged,\n  getLoggedError: (state: any) => state.auth.error\n}\n","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/sagas/auth.ts",["123"],"import { call, put, takeEvery, takeLatest, delay } from 'redux-saga/effects'\n\nimport * as AuthApi from '../../api/auth'\nimport { actions as AuthActions } from '../slices/auth' \nimport { actions as NotificationActions } from '../slices/notification' \nimport { actions as UIActions } from '../slices/ui' \n\nexport function* sagas() {\n  yield call(test, {});\n  yield takeLatest(AuthActions.willLoginUser.type, willLoginUser)\n  yield takeLatest(AuthActions.willSignupUser.type, willSignupUser)\n  console.log('in auth saga');\n}\n\nfunction* willLoginUser(action: any) {\n  console.log('in willLoginUser with ', action)\n  try{\n    const result = yield call(AuthApi.login, action.payload.username, action.payload.password)\n    yield put(AuthActions.didLoginUser(result));\n  }catch(error){\n    yield put(AuthActions.didLoginUserFails(error));\n    yield put(NotificationActions.willShowNotification({message: error.message, type: \"danger\"}));\n  }\n}\n\nfunction* willSignupUser(action: any) {\n  console.log('in willSignupUser with ', action)\n  try{\n    yield put(UIActions.startActivityRunning(\"signup\"));\n    const result = yield call(AuthApi.signup, action.payload.email, action.payload.password)\n    yield put(AuthActions.didSignupUserSuccess(result));\n    //Redirect to Confirm \n    action.payload.history.push('/signup/confirm')\n    yield put(UIActions.stopActivityRunning(\"signup\"));\n  }catch(error){\n    yield put(AuthActions.didSignupUserFails(error));\n    yield put(NotificationActions.willShowNotification({message: error.message, type: \"danger\"}));\n    yield delay(1000);\n    yield put(UIActions.stopActivityRunning(\"signup\"));\n  }\n}\n\nfunction* test(action: any) {\n  console.log('in test function');\n  yield call(AuthApi.configure);\n  console.log('after configure');\n}\n","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/api/auth.ts",["124","125","126"],"import Amplify, { Auth } from 'aws-amplify';\nimport { env } from 'process';\nimport { configuration } from '../config'\n\nexport const configure = () => {\n\n  const stage: string = process.env.REACT_APP_STAGE != undefined ? process.env.REACT_APP_STAGE : \"dev\"\n  Amplify.configure(configuration[stage]);\n\n}\n\nexport const isAuthenticated = async () => {\n  try {\n    const user = await Auth.currentAuthenticatedUser();\n    return true;\n  } catch (error) {\n    return false;\n  }\n\n}\n\nexport const login = async (username: any, password: any) => {\n\n  try {\n    const user = await Auth.signIn(username, password);\n    console.log('with result: ', user)\n  } catch (error) {\n    console.log('with error: ', error)\n    throw error;\n  }\n}\n\nexport const signup = async (email: any, password: any) => {\n  try {\n    const user = await Auth.signUp({\n      username: email,\n      password,\n      attributes: {\n        email,\n        // 'custom:favorite_flavor': 'Cookie Dough'  // custom attribute, not standard\n      }\n    })\n    console.log('with signup result: ', user)\n  } catch (error) {\n    console.log('with signup error: ', error)\n    throw error;\n  }\n}","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/config.ts",[],"/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/pages/Login.tsx",["127","128","129","130","131"],"/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/notification.tsx",["132"],"import { useSelector } from 'react-redux';\nimport {\n  Alert, Container\n} from 'reactstrap';\n\nimport { actions as NotificationActions, selectors as NotificationSelectors } from './store/slices/notification'\n\nexport const NotificationLayer = ({ children, ...rest }: any) => {\n\n  const notification = useSelector(NotificationSelectors.getNotification)\n  console.log('notification: ', notification);\n  return (\n    <>\n      { children}\n      <div style={{ position: \"absolute\", bottom: 0, left: 0, right: 0, height: 80 }}>\n        {notification.visible &&\n          <Container>\n            <Alert color={notification.type}>\n              {notification.message}\n            </Alert>\n          </Container>\n        }\n      </div>\n    </>\n  )\n}","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/slices/notification.ts",[],"/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/sagas/notification.ts",["133","134"],"/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/pages/login.tsx",["135","136","137","138","139","140"],"import * as React from 'react';\n\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button,\n  Container, FormGroup, Input, Label, FormFeedback,\n  Col, Row\n} from 'reactstrap';\nimport { Formik, Form, Field, ErrorMessage, setNestedObjectValues } from 'formik';\nimport * as Yup from 'yup';\n\nimport { actions as AuthActions, selectors as AuthSelectors } from '../store/slices/auth'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Link\n} from \"react-router-dom\";\n\n\nconst LoginSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  password: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\n\nexport const LoginPage = () => {\n\n  const dispatch = useDispatch();\n  const loginError = useSelector(AuthSelectors.getLoggedError);\n  console.log('loginError: ');\n\n  React.useEffect(() => {\n\n    console.log('effect loginError: ', loginError);\n\n    return () => { }\n\n  }, [loginError])\n\n  return (\n    <Container>\n      <Card className=\"mt-3 mt-lg-10\">\n        <CardBody>\n          <CardTitle tag=\"h5\" className=\"text-center\">Login Page</CardTitle>\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted text-center\">Hint: Insert User e Password</CardSubtitle>\n          <Formik\n            initialValues={{\n              username: '',\n              password: ''\n            }}\n            validationSchema={LoginSchema}\n            validateOnBlur={true}\n            onSubmit={values => {\n              console.log('in onsubmit with: ', values)\n              dispatch(AuthActions.wilLoginUser({ username: values.username, password: values.password }));\n            }}\n          >\n            {({ errors, touched, setFieldValue, values }) => (\n              <Form>\n                <FormGroup>\n                  <Label for=\"username\">Username</Label>\n                  <Input invalid={errors.username && touched.username ? true : false} type=\"text\" name=\"username\" id=\"username\" placeholder=\"with a placeholder\" tag={Field} />\n                  {errors.username && touched.username ? (\n                    <FormFeedback>{errors.username}</FormFeedback>\n                  ) : null}\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"password\">Password</Label>\n                  <Input invalid={errors.password && touched.password ? true : false} type=\"password\" name=\"password\" id=\"password\" placeholder=\"password placeholder\" tag={Field} />\n                  {errors.password && touched.password ? (\n                    <FormFeedback>{errors.password}</FormFeedback>\n                  ) : null}\n\n                </FormGroup>\n                <Button type=\"submit\" color=\"primary\" block>Login</Button>\n                <Button color=\"primary\" block to=\"/signup\" outline tag={Link}>Signup</Button>\n                <Button color=\"link\" block>Forgot Password?</Button>\n              </Form>\n            )}\n          </Formik>\n        </CardBody>\n      </Card>\n    </Container>\n  )\n}","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/pages/signup.tsx",["141","142","143","144","145"],"import * as React from 'react';\n\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button,\n  Container, FormGroup, Input, Label, FormFeedback,\n  Col, Row, Spinner\n} from 'reactstrap';\nimport { Formik, Form, Field, ErrorMessage, setNestedObjectValues } from 'formik';\nimport * as Yup from 'yup';\n\nimport { actions as AuthActions, selectors as AuthSelectors } from '../store/slices/auth'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { ActivityButton } from '../components/ActivityButton'\n\nconst LoginSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  surname: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: Yup.string()\n    .email()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  password: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  passwordConfirm: Yup.string()\n    .test('passwords-match', 'Passwords must match', function (value) {\n      return this.parent.password === value\n    })\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  emailConfirm: Yup.string()\n    .test('email-match', 'Emails must match', function (value) {\n      return this.parent.email === value\n    })\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\n\nexport const SignupPage = () => {\n\n  const dispatch = useDispatch();\n  const loginError = useSelector(AuthSelectors.getLoggedError);\n  let history = useHistory();\n\n  React.useEffect(() => {\n\n    console.log('effect loginError: ', loginError);\n\n    return () => { }\n\n  }, [loginError])\n\n  return (\n    <Container>\n      <Card className=\"mt-3 mt-lg-10\">\n        <CardBody>\n          <CardTitle tag=\"h5\" className=\"text-center\">Signup Page</CardTitle>\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted text-center\">Hint: Insert Email  e Password</CardSubtitle>\n          <Formik\n            initialValues={{\n              email: '',\n              emailConfirm: '',\n              name: '',\n              surname: '',\n              password: '',\n              passwordConfirm: ''\n            }}\n            validationSchema={LoginSchema}\n            validateOnBlur={true}\n            onSubmit={values => {\n              console.log('in onsubmit with: ', values)\n              dispatch(AuthActions.willSignupUser({ email: values.email, password: values.password, history: history }));\n            }}\n          >\n            {({ errors, touched, setFieldValue, values }) => (\n              <Form>\n                <FormGroup>\n                  <Label for=\"username\">Name</Label>\n                  <Input invalid={errors.name && touched.name ? true : false} type=\"text\" name=\"name\" id=\"name\" placeholder=\"with a placeholder\" tag={Field} />\n                  {errors.name && touched.name ? (\n                    <FormFeedback>{errors.name}</FormFeedback>\n                  ) : null}\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"username\">Surname</Label>\n                  <Input invalid={errors.surname && touched.surname ? true : false} type=\"text\" name=\"surname\" id=\"surname\" placeholder=\"with a placeholder\" tag={Field} />\n                  {errors.surname && touched.surname ? (\n                    <FormFeedback>{errors.surname}</FormFeedback>\n                  ) : null}\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"username\">Email Address</Label>\n                  <Input invalid={errors.email && touched.email ? true : false} type=\"text\" name=\"email\" id=\"email\" placeholder=\"with a placeholder\" tag={Field} />\n                  {errors.email && touched.email ? (\n                    <FormFeedback>{errors.email}</FormFeedback>\n                  ) : null}\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"username\">Confirm Email Address</Label>\n                  <Input invalid={errors.emailConfirm && touched.emailConfirm ? true : false} type=\"text\" name=\"emailConfirm\" id=\"emailConfirm\" placeholder=\"with a placeholder\" tag={Field} />\n                  {errors.emailConfirm && touched.emailConfirm ? (\n                    <FormFeedback>{errors.emailConfirm}</FormFeedback>\n                  ) : null}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label for=\"password\">Password</Label>\n                  <Input invalid={errors.password && touched.password ? true : false} type=\"password\" name=\"password\" id=\"password\" placeholder=\"password placeholder\" tag={Field} />\n                  {errors.password && touched.password ? (\n                    <FormFeedback>{errors.password}</FormFeedback>\n                  ) : null}\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"password\">Confirm Password</Label>\n                  <Input invalid={errors.passwordConfirm && touched.passwordConfirm ? true : false} type=\"password\" name=\"passwordConfirm\" id=\"passwordConfirm\" placeholder=\"password confirm\" tag={Field} />\n                  {errors.passwordConfirm && touched.passwordConfirm ? (\n                    <FormFeedback>{errors.passwordConfirm}</FormFeedback>\n                  ) : null}\n                </FormGroup>\n                <Row>\n                  <Col>\n                    <ActivityButton name=\"signup\" color=\"primary\" disabled block>Signup</ActivityButton>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col><Button color=\"link\" to=\"/login\" block tag={Link}>Already registered?</Button></Col>\n                </Row>\n              </Form>\n            )}\n          </Formik>\n        </CardBody>\n      </Card>\n    </Container>\n  )\n}","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/pages/home.tsx",[],"/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/pages/signupConfirm.tsx",["146"],"import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Jumbotron, Container } from 'reactstrap';\n\nexport const SignupConfirmPage = () => {\n\n  let { code }: any = useParams();\n  \n  React.useEffect(() => {\n    console.log('with code: ', code);\n    return () => {}\n  }, [])\n\n  return (\n    <Container className=\"mt-3 mt-lg-10\">\n      <Jumbotron fluid>\n        <Container fluid className=\"text-center\">\n          <h2>Account Created</h2>\n          <p className=\"lead\">Check Email for account confirmation</p>\n        </Container>\n      </Jumbotron>\n    </Container>\n  )\n}","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/components/ActivityButton.tsx",[],"/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/store/slices/ui.ts",["147","148","149"],"import { createSlice, PayloadAction, createDraftSafeSelector, createSelector } from \"@reduxjs/toolkit\";\n\nexport const currentSlice = createSlice({\n  name: 'ui',\n  initialState: {\n    activitiesRunning: {} as any\n  },\n  reducers: {\n    startActivityRunning: (state, action: PayloadAction<string>) => void (state.activitiesRunning[action.payload] = true),\n    stopActivityRunning: (state, action: PayloadAction<string>) => void (delete state.activitiesRunning[action.payload])\n  }\n})\n\n// Extract the action creators object and the reducer\nexport const { actions, reducer }: any = currentSlice\nexport const { startActivityRunning, stopActivityRunning } = actions\n\nconst activitiesRunningSelector = (state: any) => state.ui.activitiesRunning;\nexport const selectors = {\n  activityRunningSelector: createDraftSafeSelector(\n    (state: any) => state.ui.activitiesRunning,\n    (_: any, currentActivity: string) => currentActivity,\n    (activitiesRunning: any, currentActivity: any) => activitiesRunning[currentActivity] != undefined ? activitiesRunning[currentActivity] : false\n  )\n}\n","/Users/paneb/Documents/Radix/uncommon/uc-frontend/src/header.tsx",["150","151","152"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Container, Button, Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, NavbarText } from 'reactstrap'\nimport * as AuthApi from './api/auth'\nimport { selectors as AuthSelectors } from './store/slices/auth'\n\nexport const Header = ({className}: any) => {\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n  const isAuthenticated = useSelector(AuthSelectors.isAuthenticated);\n\n  return (\n    <Navbar className={className} color=\"primary\" light expand=\"md\">\n      <NavbarBrand href=\"/\">Uncommon Creative</NavbarBrand>\n      <NavbarToggler onClick={toggle} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"mr-auto\" navbar>\n          {isAuthenticated &&\n            <>\n              <NavItem>\n                <NavLink href=\"/components/\">Lista</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://github.com/reactstrap/reactstrap\">Nuovo</NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>Modifica</DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>Option 1</DropdownItem>\n                  <DropdownItem>Option 2</DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>Reset</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </>\n          }\n        </Nav>\n        <Nav navbar>\n\n          {isAuthenticated ? (\n            <NavbarText>Logout</NavbarText>\n          ) : (\n              <NavItem>\n                <NavLink href=\"/login/\">Login</NavLink>\n              </NavItem>\n            )\n          }\n        </Nav>\n\n      </Collapse>\n    </Navbar>\n  )\n}",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":6,"column":3,"nodeType":"159","messageId":"160","endLine":6,"endColumn":7},{"ruleId":"157","severity":1,"message":"161","line":1,"column":10,"nodeType":"159","messageId":"160","endLine":1,"endColumn":14},{"ruleId":"157","severity":1,"message":"162","line":1,"column":16,"nodeType":"159","messageId":"160","endLine":1,"endColumn":19},{"ruleId":"157","severity":1,"message":"163","line":1,"column":21,"nodeType":"159","messageId":"160","endLine":1,"endColumn":30},{"ruleId":"157","severity":1,"message":"164","line":1,"column":32,"nodeType":"159","messageId":"160","endLine":1,"endColumn":42},{"ruleId":"157","severity":1,"message":"165","line":3,"column":11,"nodeType":"159","messageId":"160","endLine":3,"endColumn":18},{"ruleId":"153","replacedBy":"166"},{"ruleId":"155","replacedBy":"167"},{"ruleId":"157","severity":1,"message":"168","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":25},{"ruleId":"157","severity":1,"message":"163","line":1,"column":21,"nodeType":"159","messageId":"160","endLine":1,"endColumn":30},{"ruleId":"157","severity":1,"message":"169","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":13},{"ruleId":"170","severity":1,"message":"171","line":7,"column":53,"nodeType":"172","messageId":"173","endLine":7,"endColumn":55},{"ruleId":"157","severity":1,"message":"174","line":14,"column":11,"nodeType":"159","messageId":"160","endLine":14,"endColumn":15},{"ruleId":"157","severity":1,"message":"175","line":4,"column":9,"nodeType":"159","messageId":"160","endLine":4,"endColumn":16},{"ruleId":"157","severity":1,"message":"176","line":4,"column":18,"nodeType":"159","messageId":"160","endLine":4,"endColumn":26},{"ruleId":"157","severity":1,"message":"177","line":6,"column":53,"nodeType":"159","messageId":"160","endLine":6,"endColumn":58},{"ruleId":"157","severity":1,"message":"178","line":8,"column":31,"nodeType":"159","messageId":"160","endLine":8,"endColumn":43},{"ruleId":"157","severity":1,"message":"179","line":8,"column":45,"nodeType":"159","messageId":"160","endLine":8,"endColumn":66},{"ruleId":"157","severity":1,"message":"180","line":6,"column":21,"nodeType":"159","messageId":"160","endLine":6,"endColumn":40},{"ruleId":"157","severity":1,"message":"161","line":1,"column":10,"nodeType":"159","messageId":"160","endLine":1,"endColumn":14},{"ruleId":"157","severity":1,"message":"163","line":1,"column":21,"nodeType":"159","messageId":"160","endLine":1,"endColumn":30},{"ruleId":"157","severity":1,"message":"175","line":4,"column":9,"nodeType":"159","messageId":"160","endLine":4,"endColumn":16},{"ruleId":"157","severity":1,"message":"176","line":4,"column":18,"nodeType":"159","messageId":"160","endLine":4,"endColumn":26},{"ruleId":"157","severity":1,"message":"181","line":7,"column":3,"nodeType":"159","messageId":"160","endLine":7,"endColumn":6},{"ruleId":"157","severity":1,"message":"182","line":7,"column":8,"nodeType":"159","messageId":"160","endLine":7,"endColumn":11},{"ruleId":"157","severity":1,"message":"178","line":9,"column":31,"nodeType":"159","messageId":"160","endLine":9,"endColumn":43},{"ruleId":"157","severity":1,"message":"179","line":9,"column":45,"nodeType":"159","messageId":"160","endLine":9,"endColumn":66},{"ruleId":"157","severity":1,"message":"175","line":4,"column":9,"nodeType":"159","messageId":"160","endLine":4,"endColumn":16},{"ruleId":"157","severity":1,"message":"176","line":4,"column":18,"nodeType":"159","messageId":"160","endLine":4,"endColumn":26},{"ruleId":"157","severity":1,"message":"183","line":7,"column":13,"nodeType":"159","messageId":"160","endLine":7,"endColumn":20},{"ruleId":"157","severity":1,"message":"178","line":9,"column":31,"nodeType":"159","messageId":"160","endLine":9,"endColumn":43},{"ruleId":"157","severity":1,"message":"179","line":9,"column":45,"nodeType":"159","messageId":"160","endLine":9,"endColumn":66},{"ruleId":"184","severity":1,"message":"185","line":12,"column":6,"nodeType":"186","endLine":12,"endColumn":8,"suggestions":"187"},{"ruleId":"157","severity":1,"message":"188","line":1,"column":63,"nodeType":"159","messageId":"160","endLine":1,"endColumn":77},{"ruleId":"157","severity":1,"message":"189","line":18,"column":7,"nodeType":"159","messageId":"160","endLine":18,"endColumn":32},{"ruleId":"170","severity":1,"message":"171","line":23,"column":90,"nodeType":"172","messageId":"173","endLine":23,"endColumn":92},{"ruleId":"157","severity":1,"message":"190","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":19},{"ruleId":"157","severity":1,"message":"191","line":3,"column":21,"nodeType":"159","messageId":"160","endLine":3,"endColumn":27},{"ruleId":"157","severity":1,"message":"192","line":4,"column":13,"nodeType":"159","messageId":"160","endLine":4,"endColumn":20},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'call' is defined but never used.","'put' is defined but never used.","'takeEvery' is defined but never used.","'takeLatest' is defined but never used.","'Profile' is defined but never used.",["193"],["194"],"'transpileModule' is defined but never used.","'env' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","'CardImg' is defined but never used.","'CardText' is defined but never used.","'Alert' is defined but never used.","'ErrorMessage' is defined but never used.","'setNestedObjectValues' is defined but never used.","'NotificationActions' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Spinner' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'code'. Either include it or remove the dependency array.","ArrayExpression",["195"],"'createSelector' is defined but never used.","'activitiesRunningSelector' is assigned a value but never used.","'Container' is defined but never used.","'Button' is defined but never used.","'AuthApi' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},"Update the dependencies array to be: [code]",{"range":"198","text":"199"},[294,296],"[code]"]